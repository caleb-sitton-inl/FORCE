#!/bin/bash

# Parse command line arguments:
# --conda-defs <path> : (Optional) Path to the conda.sh file
# --env-file <path>   : (Optional) Path to a conda environment YAML file. default: environment.yml
# --raven-loc <path>  : (Optional) Path to the RAVEN source code directory
# --heron-loc <path>  : (Optional) Path to the HERON source code directory. default: $RAVEN_LOC/plugins/HERON
# --teal-loc <path>   : (Optional) Path to the TEAL source code directory. default: $RAVEN_LOC/plugins/TEAL

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

while test $# -gt 0; do
    case "$1" in
        --conda-defs)
            shift
            CONDA_DEFS=$1
            shift
            ;;
        --env-file)
            shift
            ENV_FILE=$1
            shift
            ;;
        --raven-loc)
            shift
            RAVEN_LOC=$1
            shift
            ;;
        --heron-loc)
            shift
            HERON_LOC=$1
            shift
            ;;
        --teal-loc)
            shift
            TEAL_LOC=$1
            shift
            ;;
        *)
            break
            ;;
    esac
done

# Function to find RAVEN given a list of possible locations
function find_raven {
    for loc in ${LOCATIONS[@]}; do
        for dir in $(find $loc -maxdepth 1 -type d -iname "RAVEN"); do
            echo $(realpath $dir)
            return
        done
    done
    echo "Directory $1 not found in any of the locations: ${LOCATIONS[@]}"
    exit 1
}

# Function to find RAVEN plugins given a list of possible locations
function find_plugin {
    for loc in ${LOCATIONS[@]} $RAVEN_LOC; do
        for dir in $(find $loc/plugins -maxdepth 1 -type d -iname $1); do
            echo $(realpath $dir)
            return
        done
    done
    echo "Directory $1 not found in any of the locations: ${LOCATIONS[@]}/plugins"
    exit 1
}

# If the RAVEN, HERON, and TEAL locations have not been given as arguments, look for them in a few
# places before giving up.
LOCATIONS=($SCRIPT_DIR/../.. $HOME)
if [ -z "$RAVEN_LOC" ]; then
    RAVEN_LOC=$(find_raven)
fi
if [ -z "$HERON_LOC" ]; then
    HERON_LOC=$(find_plugin HERON)
fi
if [ -z "$TEAL_LOC" ]; then
    TEAL_LOC=$(find_plugin TEAL)
fi

echo "Software locations:"
echo " ... RAVEN: $RAVEN_LOC"
echo " ... HERON: $HERON_LOC"
echo " ... TEAL: $TEAL_LOC"

# Configure conda to run in the current shell
# If CONDA_DEFS is defined, use it to set the conda environment. Otherwise, we'll assume that the
# environment has already been activated.
if [ -z "$CONDA_DEFS" ]; then
    echo "Using currently active python environment."
    echo " ... Python location: $(which python)"
else
    source $CONDA_DEFS

    if [ -z "$ENV_FILE" ]; then
        ENV_FILE=$SCRIPT_DIR/environment.yml
    fi

    # Get the name of the conda environment in the environment.yml file
    echo "Reading the environment file $ENV_FILE"
    ENV_NAME=$(grep name $ENV_FILE | head -n 1 | cut -d ' ' -f 2)
    echo " ... Found environment name: $ENV_NAME"

    # If the environment already exists, update it based on the file contents. Otherwise, create it.
    if conda info --envs | grep -q force; then
        echo " ... Updating the existing environment $ENV_NAME"
        conda env update -f $ENV_FILE --name $ENV_NAME
    else
        echo " ... Creating a new environment $ENV_NAME"
        conda env create -f environment.yml
    fi

    # Activate the environment
    conda activate $ENV_NAME
fi

# Build the FORCE executables
echo "Building the FORCE executables"
python setup.py install_exe --install-dir $SCRIPT_DIR/force_install

# Build the documentation for the FORCE package tools and add them to the install directory
echo "Building the FORCE package tools documentation"
echo " ... RAVEN location: $RAVEN_LOC"
echo " ... HERON location: $HERON_LOC"
echo " ... TEAL location: $TEAL_LOC"
echo " ... Destination: $SCRIPT_DIR/force_install/docs"
sh $SCRIPT_DIR/make_docs --raven-dir $RAVEN_LOC --heron-dir $HERON_LOC --teal-dir $TEAL_LOC --dest $SCRIPT_DIR/force_install/docs

# Copy over relevant examples
echo "Copying over the FORCE examples"
echo " ... Destination: $SCRIPT_DIR/force_install/examples"
sh $SCRIPT_DIR/copy_examples --raven-dir $RAVEN_LOC --heron-dir $HERON_LOC --dest $SCRIPT_DIR/force_install/examples

# Copy over Workbench installer .exe. This is only for the Windows standalone install.
if [[ "$OSTYPE" == "msys" ]]; then
    cp $SCRIPT_DIR/Workbench-5.4.1.exe $SCRIPT_DIR/force_install/
fi
